
@model Sahaab.Models.ProductViewModel
@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<h2>Products</h2>

<div class="form-horizontal">

    <hr />

    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#CreateModal" style="margin-bottom:15px">
Add Products 
    </button>


    <form id="searchform">
        <div class="input-icon input-icon-sm">
            @Html.ValidationMessageFor(m => m.Search, "", new { @class = "", @style = "color:red" })
            @Html.TextBoxFor(m => m.Search, new { @class = "form-control input-sm" })
            <input type="button" class="btn btn-info" onclick="SearchSubmit()" value="Search" />
        </div>
    </form>



    <div class="row" id="ProductList">

        @Html.Partial("~/Views/Main/_ProductList.cshtml", Model)
    </div>


    <div id="CreateModal" class="modal fade" tabindex="-1" aria-hidden="true" role="dialog" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    <h3 class="modal-title">Add New Product</h3>
                </div>

                <form id="addproductform">
                    <div class="modal-body">
                        <ul class="new-categ ">
                            <li class=" col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label>
                                        Name:
                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "", @style = "color:red" })
                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-tag"></i>
                                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </li>
                            <li class="col-md-12 col-sm-12 col-xs-12 categ-new-arabic">
                                <div class="form-group">
                                    <label>
                                        Description:
                                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "", @style = "color:red" })
                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-tag"></i>
                                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </li>
                            <li class=" col-md-12 col-sm-12 col-xs-12 ">
                                <div class="form-group">
                                    <label>
                                        Item Price:
                                        @Html.ValidationMessageFor(m => m.ItemPrice, "", new { @class = "", @style = "color:red" })
                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-edit"></i>
                                        @Html.TextBoxFor(m => m.ItemPrice, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </li>
                            <li class=" col-md-12 col-sm-12 col-xs-12 categ-new-arabic">
                                <div class="form-group">
                                    <label>
                                        Item Count:
                                        @Html.ValidationMessageFor(m => m.ItemCount, "", new { @class = "", @style = "color:red" })

                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-edit"></i>
                                        @Html.TextBoxFor(m => m.ItemCount, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </li>
                            <li class=" col-md-12 col-sm-12 col-xs-12 categ-new-arabic">
                                <div class="form-group">
                                    <label>
                                        Product Type:
                                        @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-edit"></i>

                                        @Html.DropDownListFor(m => m.ProductTypeId, new SelectList(Model.ProductTypeList, "Id", "Name"), "--- Select Product Type ---",
                                        htmlAttributes: new { @class = "form-control form-control-default" })
                                        @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </li>
                            <li class=" col-md-12 col-sm-12 col-xs-12 categ-new-arabic">
                                <div class="form-group">
                                    <label>
                                        Product Availibility:
                                    </label>
                                    <div class="input-icon input-icon-sm">
                                        <i class="fa fa-edit"></i>
                                        @Html.CheckBoxFor(m => m.AvailabilityStatus, new { @class = "form-control input-sm" }) Yes
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <input id="btnClose" type="button" class="btn btn-danger" value="Close" data-dismiss="modal" />
                        <input type="button" class="btn btn-info" onclick="AddProduct()" value="Save" />
                    </div>
                </form>

            </div>
        </div>
    </div>


    <div id="EditProductModal" class="modal fade" tabindex="-1" aria-hidden="true" role="dialog" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                    <h3 class="modal-title">Edit Brand</h3>
                </div>
                <div id="EditProductContent">

                </div>
            </div>
        </div>
    </div>

</div>

<script>
    function AddProduct() {

        var IsValid = $("#addproductform").valid();
        if (IsValid)
        {
            var valdata = $("#addproductform").serialize();
            $.ajax(
                {
                    url: '@Url.Action("Create", "Main")',
                    type: "POST",
                    dataType: 'text',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: valdata,
                    success: function (result)
                        {
                        document.getElementById("addproductform").reset();

                        $('#CreateModal').modal('hide');
                        $('#ProductList').html(result);
                        },
                    error: function (response) {
                        var abc=JSON.stringify(response);
                        alert("error : " + response);
                    }
                });
        }

    }
</script>


<script>
    function UpdateProduct() {
       
        var IsValid = $("#Editproductform").valid();
       
        if (IsValid)
        {
            var valdata = $("#Editproductform").serialize();
            $.ajax(
                {
                    url: '@Url.Action("Update", "Main")',
                    type: "POST",
                    dataType: 'text',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: valdata,
                    success: function (result)
                        {
                        document.getElementById("Editproductform").reset();
                        $('#EditProductModal').modal('hide');
                        $('#ProductList').html(result);
                        },
                    error: function (response) {
                        var abc=JSON.stringify(response);
                        alert("error : " + response);
                    }
                });
        }

    }
</script>


<script>
    function Delete(id) {

         $.ajax(
            {
                url: '@Url.Action("Delete", "Main")',
                type: "POST",
                dataType: 'text',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { "id": id },
                success: function (result) {
                    $('#ProductList').html(result);
                },
                error: function (response) {
                    var abc = JSON.stringify(response);
                    alert("error : " + response);
                }
            });
    }
</script>



<script>
    function Details(id) {

         $.ajax(
            {
                url: '@Url.Action("Details", "Main")',
                type: "POST",
                dataType: 'text',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { "id": id },
                 success: function (result) {
                     $('#EditProductContent').html(result);
                     $('#EditProductModal').modal('show');
                },
                error: function (response) {
                    var abc = JSON.stringify(response);
                    alert("error : " + response);
                }
            });
    }
</script>

<script>
    function SearchSubmit() {


        var IsValid = $("#searchform").valid();
        if (IsValid)
        {
            var searchtext = document.getElementById('Search').value;

            var valdata = $("#searchform").serialize();
            $.ajax(
                {
                    url: '@Url.Action("Search", "Main")',
                    type: "POST",
                    dataType: 'text',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: { "search": searchtext },
                    success: function (result)
                        {
                        document.getElementById("searchform").reset();
                        $('#ProductList').html(result);
                        },
                    error: function (response) {
                        var abc=JSON.stringify(response);
                        alert("error : " + response);
                    }
                });
        }

    }
</script>